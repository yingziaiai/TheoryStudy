集群与分布式：
http://os.51cto.com/art/201408/448272.htm

Response Time Analysis: How to Improve Database Performance by Measuring User Experience
https://logicalread.com/response-time-analysis/#.Wb8oMsgjFPZ---------------------------good


https://coolshell.cn/articles/7490.html
性能调优攻略

一句话：分布式是并联工作的，集群是串联工作的。
1：分布式是指将不同的业务分布在不同的地方。 而集群指的是将几台服务器集中在一起，实现同一业务。
分布式中的每一个节点，都可以做集群。 而集群并不一定就是分布式的。
举例：就比如新浪网，访问的人多了，他可以做一个群集，前面放一个响应服务器，后面几台服务器完成同一业务，如果有业务访问的时候，响应服务器看哪台服务器的负载不是很重，就将给哪一台去完成。
而分布式，从窄意上理解，也跟集群差不多， 但是它的组织比较松散，不像集群，有一个组织性，一台服务器垮了，其它的服务器可以顶上来。
分布式的每一个节点，都完成不同的业务，一个节点垮了，哪这个业务就不可访问了。
2：简单说，分布式是以缩短单个任务的执行时间来提升效率的，而集群则是通过提高单位时间内执行的任务数来提升效率

应用案例：
http://www.360doc.com/content/14/0119/22/15109633_346516210.shtml

MySQL主从架构（一主多从）的一些优点
http://blog.csdn.net/geekcoder/article/details/9985809

1、数据存在多个镜像和数据冗余，可以防止单一主机的数据丢失，提高数据的安全性。
2、主机宕机的时候，可以切换到从服务器上，数据的一致性可能存在问题（异步复制的延迟）。如果主机突然宕机，可能一些数据没有及时同步从服务器上。MySQL5.6提供一种半同步的复制方式（参考：Semisynchronous Replication），但是效率使其略显鸡肋；还有其他方式实现的同步复制，如DRBD。
3、如果使用mysql proxy，在业务上可以实现读写分离。即可以把一些读操作在从服务器上执行，减小主服务器的负担。
4、在从服务器上做数据备份，这样不影响主服务器的正常运行。如mysqldump备份时会加表所。
5、在从服务器上做数据报表和数据统计，这样可以避免生产服务器的访问压力过大。
6、从服务器可以使用不用的存储引擎，适应不同的应用需求；另外从库上的数据表建立不同的索引，可以满足如统计工作上的要求。


mongodb主从，副本集，分片的理解
http://chenhua-1984.iteye.com/blog/2158526
http://blog.sina.com.cn/s/blog_5e83fce60102vhs6.html
http://www.cnblogs.com/zhoujinyi/p/4635444.html

    MongoDb在用于生产环境的三种模式，master/slaves（主从模式）;replcation副本集;auto shard 分片模式
 
   在早期的系统设计中，主从模式是比较流行的，将读写分离，在不同的DB上操作，可以有效降低数据库的压力，而且还能实现数据的备份，但是在master节点故障的时候，不能及时的自动的切换到slaves节点，需要手动干预，这个是硬伤
 
   目前在Mongodb的官方说法中已经不推荐使用master/slave/模式，推荐使用副本集模式，应为该模式不但实现了主从模式的读写分离，而且有自己的一套选举机制，能通过自己的算法，选举出当前最优的节点作为活跃节点，一旦活跃节点宕机，选举出来的新的节点将成为活跃节点对外提供服务，其他节点则继续作为复制节点，当原先的活跃节点恢复，会自动作为非活跃节点（备份节点）存在。
 这种模式的最大优点在于Mongodb的自动选举活跃节点的机制，不需要手动干预便可以实现活跃与非活跃的切换，但是它由于数据没有shard，每个节点都是一个完成的备份，则不能使用MongoDb的分布式计算功能，当然，也可以通过程序自己来实现（成本很高），所以就有了Auto shard模式
 
   利用Mongo的分片，可以将数据自动的分解成多个块，存储在不同的节点上，每个被差分的块都有三个副本集，这样是为了数据备份和恢复，而且数据分片以后，可以利用多台廉价的存储和CPU的计算构建一个水平可扩展的计算架构，这就是我们的分布式计算
 
   目前在单台Mongodb上做MapReduce，速度还是比较慢的，但是如果数据分散在多台机器上，利用多太机器建立一个计算集群，计算速度估计会线性增长。
   
玩转mongodb（八）：分布式计算--MapReduce   
   http://www.cnblogs.com/zhouqinxiong/p/5576973.html
 MongoDB单机, 主从, 分布式部署
 http://blog.csdn.net/pelick/article/details/8644116
 mongodb数据库集群及sharding分片配置
 http://blog.csdn.net/reblue520/article/details/51729686   
   
   
Redis主从同步原理
http://blog.csdn.net/sk199048/article/details/50725369   