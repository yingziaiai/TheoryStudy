http://api.jquery.com/jQuery.ajax/

AJAX请求 $.post方法的使用
http://www.cnblogs.com/Johnny_Z/archive/2012/06/17/2552597.html

http://www.cnblogs.com/tylerdonet/p/3520862.html

http://www.php100.com/html/program/jquery/2013/0905/5918.html


ajax:
http://www.jb51.net/article/76047.htm
http://www.w3school.com.cn/jquery/jquery_ajax_intro.asp

 jsp ajax实例讲解 
 http://blog.csdn.net/rushkid02/article/details/7515058
 http://www.108js.com/article/article10/a0046.html?id=2446
 
 
 HTML中使用Ajax进行局部刷新页面，使用JS将数据发送到后台
 http://blog.csdn.net/u013360850/article/details/52770038
 
 Ajax中Put和Delete请求传递参数无效的解决方法（Restful风格） 
 http://blog.csdn.net/lixhongwu/article/details/9229267
 
  success : function(data) {
                $(showDiv).append("<p>修改处理结果：" + data.flag + "</p>") ;
            } ,
            error : function(data) {
                $(showDiv).append("<p>对不起，出错啦！</p>") ;
            } 
 success:function(data) {    
        if(data.msg =="true" ){    
            // view("修改成功！");    
            alert("修改成功！");    
            window.location.reload();    
        }else{    
            view(data.msg);    
        }    
     },    
     error : function() {    
          // view("异常！");    
          alert("异常！");    
     }   
     
  ajax获取input value
  not var = document.getElementByID().value;
  but as below:
  <html>
  <body>
  <input type="test" id="name" value="">
  <input type="submit" onclick="">
  
     $("#button").click(function(){
        var value1 = $("#name").val();
        alert(value1);
        $("#name").val("修改了值")
        var value2 = $("#name").val();
        alert(value2);
    });   
    
   ajax的data传参的两种方式 
     http://blog.csdn.net/coffeesmile/article/details/20992829  
     
     
   jquery Ajax 方法返回数据的获取，包括JSON,XML,TXT
   http://www.cnblogs.com/zgqys1980/archive/2011/10/28/2227974.html
   http://www.w3school.com.cn/jquery/ajax_ajax.asp  
   
    json对象与json字符串互转，ajax各常见函数 
    http://blog.csdn.net/yaozhiwei1019/article/details/53462618
    jquery操作字符串常用方法总结及工作代码 
    http://blog.csdn.net/woshifeixingzhuiyue/article/details/11969805
    
    
    AJAX运行过程中5种状态 
    http://blog.csdn.net/zzxian/article/details/17073951
    http://www.cnblogs.com/fanshaokun/p/6272816.html
    Ajax工作原理
    http://www.cnblogs.com/mingmingruyuedlut/archive/2011/10/18/2216553.html
    
    
    ajax 跨域 headers JavaScript ajax 跨域请求 +设置headers 实践
    $.ajax({
    type: "GET",
    url: "test.php",
    success: function(data) {
        console.log(data);
    },
    beforeSend: function(xhr) {
        xhr.setRequestHeader("User-Agent", "headertest");
    }
});
    http://www.cnblogs.com/cdemo/p/5158663.html
    
    
    Ajax同步发送、字符串按步长截断
    http://www.cnblogs.com/lilyimage/archive/2012/09/04/2670640.html
    
    AJAX中的dataType(数据格式)-text、json
    http://www.cnblogs.com/nuanai/p/6264872.html
    
    AJAX 学习笔记[四] AJAX 对服务器返回的XML 的处理
    http://www.cnblogs.com/xugang/archive/2010/08/07/1794750.html
    
    
    jquery Ajax 方法返回数据的获取，包括JSON,XML,TXT
    http://www.cnblogs.com/zgqys1980/archive/2011/10/28/2227974.html
    
    
    关于firefox(火狐)浏览器中ajax请求返回data时出现[object XMLDocument]的情况的分析 
    http://blog.csdn.net/chinaonlyqiu/article/details/8882532?utm_source=tuicool
         
  http://bbs.csdn.net/topics/380237868       
  data:$('#yourformid').serialize(),    
  
  
  ajax post提交的方式 注意事项
  http://www.cnblogs.com/xuejianxiyang/p/4885304.html
  注意post请求的Content-Type为application/x-www-form-urlencoded，参数是在请求体中，即上面请求中的Form Data(后台通过Request.Form["name"]来获取)。

如果Content-Type为application/json;charset=UTF-8或text/plain;charset=UTF-8，则请求表单参数在RequestPayload中(后台用StreamReader方式来读取:



jquery ajax POST 例子详解
    function test(){
   $.ajax({
            //提交数据的类型 POST GET
            type:"POST",
            //提交的网址
            url:"testLogin.aspx",
            //提交的数据
            data:{Name:"sanmao",Password:"sanmaoword"},
            //返回数据的格式
            datatype: "html",//"xml", "html", "script", "json", "jsonp", "text".
            //在请求之前调用的函数
            beforeSend:function(){$("#msg").html("logining");},
            //成功返回之后调用的函数             
            success:function(data){
           $("#msg").html(decodeURI(data));            
            }   ,
            //调用执行后调用的函数
            complete: function(XMLHttpRequest, textStatus){
               alert(XMLHttpRequest.responseText);
               alert(textStatus);
                //HideLoading();
            },
            //调用出错执行的函数
            error: function(){
                //请求出错处理
            }         
         });

  }
http://www.cnblogs.com/bestsaler/archive/2010/04/08/1835508.html


ajax与302响应
http://www.cnblogs.com/dudu/p/ajax_302_found.html

使用ajax提交form表单，包括ajax文件上传
http://www.cnblogs.com/zhuxiaojie/p/4783939.html

深入理解jQuery中$.get、$.post、$.getJSON和$.ajax的用法
http://www.cnblogs.com/ranzige/p/jquery_get_ajax.html

jQuery.ajax处理302重定向
jQuery ajax 302跨域
http://www.cnblogs.com/wonyun/p/5696838.html
http://www.tuicool.com/articles/Mf2mim

Nginx反向代理，负载均衡，redis session共享，keepalived高可用
http://www.cnblogs.com/mrlinfeng/p/6146866.html

KeepAlive详解
http://www.cnblogs.com/havenshen/p/3850167.html
Linux高可用(HA)之Nginx+Redis+Tomcat集群实现session保持和共享
https://www.dwhd.org/20150604_095952.html


WEB程序会话管理--HttpSession和Cookie
http://blog.csdn.net/xiaoxiao_72699/article/details/30121225

 利用Session完成用户的登录和注销
http://blog.csdn.net/xigedanganxi/article/details/11565419

我的shiro之旅: 六 自定义shiro的sessionId
http://blog.csdn.net/lhacker/article/details/12091463
tomcat对sessionId的处理分析
http://www.tuicool.com/articles/Af6VNr


Spring boot configure custom jsessionid for embedded server
https://stackoverflow.com/questions/25918556/spring-boot-configure-custom-jsessionid-for-embedded-server



Spring RESTful服务接收和返回JSON最佳实践
https://my.oschina.net/u/2273085/blog/481085
以下是使用 jQuery 接收、发送 JSON 的代码：
Js代码    收藏代码
$(document).ready(function(){  
    jQuery.ajax({  
        type: 'GET',  
        contentType: 'application/json',  
        url: 'jsonfeed.do',  
        dataType: 'json',  

  http://bbs.csdn.net/topics/370259330      
 transport.responseText       
 function toEdit(input) {
    var td = input.parentNode;//debugger;
    var tr = td.parentNode;
    if (checkSubmit(quoteSheet)) {
        var trIds = tr.value;
        var params = Form.serialize('quoteSheet')+"&xxnr.id="+trIds;
        new Ajax.Request("edit.action", {
            method : 'post',
            parameters : params,
            onSuccess : function(transport) {
                if (transport.responseText == "1") {
                    editData(input);
                    alert("更新成功");
                } else if (transport.responseText == "0") {
                    alert("更新失败");
                }
            }
        });
    }
}

Ajax中responseText解析json格式数据
解决ajax处理服务器端返回结果responseText中是JSON的数据。
http://blog.csdn.net/sober_123/article/details/51322060

Ajax的响应信息ResponseText和ResponseXML
https://www.cnblogs.com/kathy-qiqi/archive/2012/09/12/2681907.html－－－－分析工具

Ajax请求Servlet返回文本 json html和XML数据并解析xml及responseText和responseXML的区别
http://blog.csdn.net/liangwenmail/article/details/51987006－－－－－－－－－very good,前后端都有

Ajax学习---responseText，innerHTML属性


jQuery AJAX 方法 success()后台传来的4种数据
http://blog.csdn.net/dreamstar613/article/details/61913970

http://blog.csdn.net/Sunflowerfiona/article/details/52563875
Ajax的原理

AJAX = 异步 JavaScript 和 XML（Asynchronous JavaScript and XML）。简短地说，在不重载整个网页的情况下，AJAX 通过后台加载数据，并在网页上进行显示 
Ajax的原理简单来说通过XmlHttpRequest对象来向服务器发异步请求，从服务器获得数据，然后用javascript来操作DOM而更新页面。这其中最关键的一步就是从服务器获得请求数据。


浅析Ajax跨域原理及JQuery中的实现分析－－－－－－－不错，对比与分析了底层原理（ajax, jsonp）
jQuery源码分析系列(35) : Ajax - jsonp的实现与原理
jQuery-AJAX模块解析-response部分
http://blog.csdn.net/z905951024/article/details/45970539
https://www.cnblogs.com/yunfeifei/p/4138632.html
https://www.cnblogs.com/aaronjs/p/3785646.html
        