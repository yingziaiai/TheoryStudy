包含Map的对象json序列化与反序列化
http://outofmemory.cn/code-snippet/3678/contain-Map-object-json-sequence-huayu-fan-sequence-hua

java 反序列化复杂Map
http://hw1287789687.iteye.com/blog/2354056

http://blog.csdn.net/sinat_32955803/article/details/51322320
一、序列化和反序列化的含义
          注：序列化的其实是对象在某一时刻的状态（冻结对象状态）。如person.setAge(100)，就是保存的person年龄为100的状态，无论用何种方式，控制序列化细节，不控  制序列化细节也好，序列化的都是对象在某一时刻的状态，也就是持久化对象这一时刻的状态；反序列化就是将这一对象状态解冻。
          反序列化出来的对象还是原来的对象吗，或者他是一个新的对象实例？答案是一个新的对象实例，具体请看第六点。
序列化：将java对象转换为可保持或可传输的格式，即转换为二进制字节序列（字节流）的形式的过程。
反序列化：将二进制字节序列（字节流）形式的java对象解析出来的过程。
发送方需要将java对象进行序列化，即转换为二进制字节序列（字节流）形式。
接收方需要将二进制字节序列（字节流）形式的对象恢复出来。
二、为什么要进行序列化
当两个进程间进行通讯时可以相互发送任何资源（数据），这些资源包括图片、文本、音频、视频等，而这些资源在网络上传输的格式均为二进制序列（字节流）。
当两个java进程进行通讯时能否实现进程间的对象传输呢。是可以的，但必须完成对象的序列化，即将对象转换为二进制序列（字节流）的形式。
三、序列化的用途及好处
序列化可以实现数据的持久化，也就是说可以将数据永久的保存在磁盘上。
序列化可以实现远程通讯，即在网络上以二进制字节序列的格式传送对象。
序列化可以将对象状态保存，方便下次取出利用。
有了序列化，两个进程就可以在网络上任性的交互数据了。
       举例：
java的HashMap类实现了Serializable接口，所以在服务器上使用map.put("key",value)方法添加数据，然后将这个HashMap以二进制字节序列在网络上传送出去，可以到手机，可以到另一个终端·······。在终端在将此HashMap解析出来，将数据显示或利用。
以android程序和服务器来说，两个进程进行数据的传递。服务器将数据封装进一个bean里或者HashMap里，或以List集合的形式，，一般是服务器向将对象打成json字符串的形式，然后以二进制字节序列的形式传送到手机终端，手机终端或其他终端在将此二进制字节序列（字节流）反序列化成json字符串，然后在将此json字符串进一步解析，最后解析成原本的对象（数据），实现数据的任性交互，反之亦然，其实不是jdk的序列化。
四、transient关键字（影响序列化）
有些情况下不能使用默认的序列化方式，比如，某个变量不想序列化、简化序列化过程等，需要用到影响序列化，影响序列化可以使我们自身控制序列化的行为。
当某个字段被声明为transient后，默认序列化机制就会忽略该字段         
五、怎样实现序列化
为什么实现了Serializable就可以序列化，这源于objectOutputStream类，如果写入对象是对象的类型是String，或数组，或Enum，或Serializable，那么就可以对该对象进行序列化，否则将抛出NotSerializableException。
继承Serializable接口，使用默认的方式来进行序列化，这种序列化方式仅仅对对象的非transient的实例变量进行序列化，而不会序列化对象的transient的实例变量，也不会序列化静态变量，所以我们对不想持久化的变量可以加上transient关键字。注意使用默认机制，在序列化对象时，不仅会序列化当前对象本身，还会对该对象引用的其它对象也进行序列化，同样地，这些其它对象引用的另外对象也将被序列化，以此类推。所以，如果一个对象包含的成员变量是容器类对象，而这些容器所含有的元素也是容器类对象，那么这个序列化的过程就会较复杂，开销也较大。
继承Externalnalizable（Externalnalizable为Serializable的子类）接口，自身控制序列化的行为。

http://www.cnblogs.com/wcyBlog/p/3928662.html
http://blog.csdn.net/wjw0130/article/details/45766709
 JavaWeb之Session的序列化和反序列化 && Session的活化和钝化
2、什么情况下需要序列化 
a）当你想把的内存中的对象保存到一个文件中或者数据库中时候；
b）当你想用套接字在网络上传送对象的时候；
c）当你想通过RMI传输对象的时候；


https://www.oschina.net/question/228694_2151535
使用redis缓存对象，该选择json还是序列化呢。
